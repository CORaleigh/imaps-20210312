(self.webpackChunkimaps=self.webpackChunkimaps||[]).push([[2592],{42592:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>Me});var s=i(56140),n=(i(95830),i(36544)),r=(i(68055),i(79881)),a=i(51894),o=i(87566),l=(i(10923),i(57002),i(86035),i(39105)),d=i(93533),u=(i(40450),i(24258)),c=i(9200),h=i(19401),p=i(90806),m=i(59472),_=i(59691),v=i(80621),b=i(65867),g=i(19539),w=i(61106),P=(i(36348),i(2887)),y=i(58722),L=i(53640),f=i(76916),M=i(34937),C=i(82677),D=i(89785),O=i(92630);class V{constructor(e,t){this.owner=t,this.properties={},this.afterDispatchHandle=null;for(const t in e){const i=e[t],s=new D.e(i,null,null,2,2);this.properties[t]={pool:s,acquired:[]}}this.afterDispatchHandle=(0,O.Fs)((()=>this.release()))}destroy(){this.afterDispatchHandle&&(this.afterDispatchHandle.remove(),this.afterDispatchHandle=null);for(const e in this.properties){const t=this.properties[e];for(const e of t.acquired)(0,O.NC)(e)||t.pool.release(e);t.pool.destroy(),t.pool=null,t.acquired=null}this.properties=null,this.owner=null}get(e){const t=this.owner._get(e),i=this.properties[e];let s=i.pool.acquire();for(i.acquired.push(s);s===t;)i.acquired.push(s),s=i.pool.acquire();return s}release(){for(const e in this.properties){const t=this.properties[e];let i=0;for(const e of t.acquired)(0,O.NC)(e)?t.acquired[i++]=e:t.pool.release(e);t.acquired.length=i}}}let k=class extends C.default{constructor(){super(...arguments),this.type="DirectLineMeasurement3D",this.visible=!0,this.settings=new j,this.measurement=null}destroy(){this.settings.destroy()}set startPoint(e){this.measurement=null,this._set("startPoint",(0,m.pC)(e)?e.clone():null)}set endPoint(e){this.measurement=null,this._set("endPoint",(0,m.pC)(e)?e.clone():null)}};(0,s._)([(0,r.Cb)()],k.prototype,"type",void 0),(0,s._)([(0,r.Cb)()],k.prototype,"visible",void 0),(0,s._)([(0,r.Cb)()],k.prototype,"settings",void 0),(0,s._)([(0,r.Cb)({value:null})],k.prototype,"startPoint",null),(0,s._)([(0,r.Cb)({value:null})],k.prototype,"endPoint",null),(0,s._)([(0,r.Cb)()],k.prototype,"measurement",void 0),k=(0,s._)([(0,o.j)("esri.views.3d.interactive.graphics.DirectLineMeasurement3D.DirectLineMeasurement3D")],k);let j=class extends C.default{constructor(){super(...arguments),this.unit="metric"}};(0,s._)([(0,r.Cb)({value:"metric"})],j.prototype,"unit",void 0),j=(0,s._)([(0,o.j)("esri.views.3d.interactive.graphics.directLineMeasurement3D.Settings")],j);let T=class extends C.default{constructor(){super(...arguments),this._handles=new _.Z,this._propertiesPool=new V({startPoint:w.Z,endPoint:w.Z},this),this.model=new k,this.cursorPoint=null,this.state="initial",this.active=!1,this.geodesicMeasurementDistanceThreshold=1e5}initialize(){this.sceneView.analyses.add(this.model),this.reset()}destroy(){this._handles.destroy(),this._handles=null,this.sceneView.analyses.remove(this.model),this._propertiesPool.destroy(),this._propertiesPool=null,this.model.destroy()}set startPointSurfaceLocation(e){this._set("startPointSurfaceLocation",e)}set endPointSurfaceLocation(e){this._set("endPointSurfaceLocation",e)}get measurementSurfaceLocation(){const e=this.startPointSurfaceLocation,t=this.endPointSurfaceLocation;return null==e||null==t||"above-the-surface"===e&&"below-the-surface"===t||"below-the-surface"===e&&"above-the-surface"===t||"on-the-surface"===e&&"on-the-surface"===t?"camera-dependent":"above-the-surface"===e||"above-the-surface"===t?"above-the-surface":"below-the-surface"}get validMeasurement(){return(0,m.pC)(this.model.startPoint)&&(0,m.pC)(this.model.endPoint)}get isMeasuring(){return!!this.startPoint}get geodesicDistanceExceeded(){return(0,m.pC)(this.model.measurement)&&this.model.measurement.horizontalDistance&&this.model.measurement.horizontalDistance.value>this.geodesicMeasurementDistanceThreshold}reset(){this.clearMeasurement()}clearMeasurement(){this.state="initial",this.startPoint=null,this.endPoint=null,this.cursorPoint=null,this._clearOverride("measurementSurfaceLocation")}finishMeasurement(){if(!this._isOverridden("measurementSurfaceLocation")){const e=this.measurementSurfaceLocation,t="camera-dependent"===e?this.sceneView.state.camera.aboveGround?"above-the-surface":"below-the-surface":e;this._override("measurementSurfaceLocation",t)}this.state="measured"}};(0,s._)([(0,r.Cb)()],T.prototype,"messages",void 0),(0,s._)([(0,r.Cb)({constructOnly:!0})],T.prototype,"sceneView",void 0),(0,s._)([(0,r.Cb)()],T.prototype,"model",void 0),(0,s._)([(0,a.B)("model.startPoint")],T.prototype,"startPoint",void 0),(0,s._)([(0,r.Cb)({value:null})],T.prototype,"startPointSurfaceLocation",null),(0,s._)([(0,a.B)("model.endPoint")],T.prototype,"endPoint",void 0),(0,s._)([(0,r.Cb)({value:null})],T.prototype,"endPointSurfaceLocation",null),(0,s._)([(0,r.Cb)()],T.prototype,"measurementSurfaceLocation",null),(0,s._)([(0,r.Cb)()],T.prototype,"cursorPoint",void 0),(0,s._)([(0,r.Cb)()],T.prototype,"state",void 0),(0,s._)([(0,a.B)("model.settings.unit")],T.prototype,"unit",void 0),(0,s._)([(0,r.Cb)()],T.prototype,"active",void 0),(0,s._)([(0,r.Cb)({readOnly:!0})],T.prototype,"validMeasurement",null),(0,s._)([(0,r.Cb)({readOnly:!0})],T.prototype,"isMeasuring",null),(0,s._)([(0,r.Cb)()],T.prototype,"geodesicMeasurementDistanceThreshold",void 0),(0,s._)([(0,r.Cb)({readOnly:!0})],T.prototype,"geodesicDistanceExceeded",null),T=(0,s._)([(0,o.j)("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DModel")],T);const x=T;var S,U=i(33655),z=i(96071),R=i(77625),H=i(89333),E=i(88),q=i(67134),A=i(19132),G=i(50777),W=i(39160),I=i(51635);const B={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5};let Z=S=class extends C.default{constructor(e){super({}),this._state="pending",this._visible=!1,this._laserLine=null,this._handles=new _.Z,this._listenerHandles=null,this._cursorPosition=(0,R.c)(),this._startPosition=(0,R.c)(),this._endPosition=(0,R.c)(),this._lastDraggedHandle=null,this.dataObjectView=null,this._model=e.model,this._view=e.model.sceneView,this._params=e.params?(0,W.gh)(B,e.params):(0,W.gh)(B,{}),this._intersector=new q.r(this._view.state.mode),this._intersector.options.store=0}initialize(){const e=this._model.model,t=this._view.getAnalysisView(e);(0,m.pC)(t)?this._initialize(t):this._view.whenAnalysisView(e).then((e=>this._initialize(e)))}_initialize(e){switch(this._state){case"pending":break;case"destroyed":return}this._set("dataObjectView",e),this._laserLine=new I.W({view:this._view,attached:!0}),this._initializeListeners(),this._state="ready"}destroy(){switch(this._state){case"pending":return void(this._state="destroyed");case"ready":break;case"destroyed":default:return}this.hide(),this._destroyListeners(),this._handles.destroy(),this._handles=null,this._laserLine.destroy(),this._laserLine=null,this._state="destroyed"}get requiresCursorPoint(){return"initial"===this._model.state&&this._model.active}get visible(){return this._visible}set visible(e){e?this.show():this.hide()}get viewMode(){const e=this.dataObjectView;if(!(0,m.pC)(e))return F.None;switch(e.viewMode){default:case"none":return F.None;case"segment":return F.Direct;case"segment-and-triangle":return F.Triangle;case"segment-and-projection":return F.ProjectedGeodesic}}get testData(){const e=this._laserLine.testData;let t=null;const i=this.dataObjectView;if((0,m.pC)(i)){const e="geodesic"===i.actualVisualizedMeasurement;t={direct:e?i.horizontalLabel:i.segmentLabel,horizontal:e?i.segmentLabel:i.horizontalLabel,vertical:i.verticalLabel}}else t={direct:null,horizontal:null,vertical:null};return{labels:t,laserLineRenderer:{heightManifoldEnabled:!!(0,m.pC)(e)&&e.heightManifoldEnabled,heightManifoldTarget:(0,m.pC)(e)?e.heightManifoldTarget:null,pointDistanceEnabled:!!(0,m.pC)(e)&&e.pointDistanceEnabled,pointDistanceOrigin:(0,m.pC)(e)?e.pointDistanceOrigin:null,pointDistanceTarget:(0,m.pC)(e)?e.pointDistanceTarget:null,lineVerticalPlaneEnabled:!!(0,m.pC)(e)&&e.lineVerticalPlaneEnabled},stripeLength:this._computeMeasurementArrowStripeLength(this._model.model)}}get directLabelText(){return(0,m.pC)(this.dataObjectView)?this.dataObjectView.segmentLabel.text:null}get horizontalLabelText(){return(0,m.pC)(this.dataObjectView)?this.dataObjectView.horizontalLabel.text:null}get verticalLabelText(){return(0,m.pC)(this.dataObjectView)?this.dataObjectView.verticalLabel.text:null}createManipulators(){const e=()=>{const e=(0,G.aD)(this._view,this._params.handleColor,this._params.handleOpacity);return e.available=!1,e.radius=this._params.handleRadius,e},t=e(),i=e();this._model.startPoint&&(t.location=(0,m.Wg)(this._model.startPoint),t.available=!0),this._model.endPoint&&(i.location=(0,m.Wg)(this._model.endPoint),i.available=!0);const s=()=>{let e=this._lastDraggedHandle;t.grabbing&&!i.grabbing&&(e="start"),i.grabbing&&!t.grabbing&&(e="end"),t.grabbing||i.grabbing||(e=null);const s=e!==this._lastDraggedHandle;this._lastDraggedHandle=e,s&&this.visible&&this._updateLaserLine()};return this._handles.add([t.events.on("grab-changed",(()=>{s()})),i.events.on("grab-changed",(()=>{s()}))]),{start:t,end:i}}show(){switch(this._state){case"ready":this._visible||(this._visible=!0,this._model.model.visible=!0,this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha},this._laserLine.visible=!0,this._updateCursorPosition(),this._updateStartPosition(),this._updateEndPosition(),this._updateLaserLine());break;case"pending":this._visible=!0;break;case"destroyed":default:return}}hide(){switch(this._state){case"ready":this._visible&&(this._visible=!1,this._model.model.visible=!1,this._laserLine.visible=!1,this._view.cursor=null);break;case"pending":this._visible=!1;break;case"destroyed":default:return}}pick(e){const t=this._view.spatialReference,i=(0,z.md)(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(i,this._intersector);const s=this._intersector.results.min,n=(0,R.c)();if(!s.getIntersectionPoint(n))return new S.PickResult;const r=this._view.renderCoordsHelper.fromRenderCoords(n,t);if((0,m.Wi)(r))return new S.PickResult;const a="TerrainRenderer"===s.intersector?"ground":"feature";return new S.PickResult(a,n,r)}getElevation(e){return this._view.basemapTerrain.ready?(0,m.Pt)((0,A.KO)(this._view.elevationProvider,e),0):0}overlappingHandles(e,t){return(0,W.Vl)(e,t,this._view)<=this._params.handleRadius}_computeMeasurementArrowStripeLength(e){let t=null;if((0,m.pC)(e.measurement)){const i=e.measurement.directDistance;switch(this._model.model.settings.unit){case"metric":t=i&&i.toUnit("meters");break;case"imperial":t=i&&i.toUnit((0,d.FN)(i.value,i.unit));break;case"degrees":case"degrees-minutes-seconds":{const i=e.measurement.geodesicAngle;t=i&&i.toUnit("degrees");break}default:t=i&&i.toUnit(this._model.model.settings.unit)}}let i=1;return t&&(i=(0,U.sk)(t.value/30),i*="degrees"===t.unit?(0,H.Iu)(this._view.spatialReference).metersPerDegree:(0,d.En)(1,t.unit,"meters")),i}_updateCursorPosition(){this._model.cursorPoint&&this._view.renderCoordsHelper.toRenderCoords(this._model.cursorPoint,this._cursorPosition)}_updateStartPosition(){(0,m.pC)(this._model.startPoint)&&this._view.renderCoordsHelper.toRenderCoords(this._model.startPoint,this._startPosition)}_updateEndPosition(){(0,m.pC)(this._model.endPoint)&&this._view.renderCoordsHelper.toRenderCoords(this._model.endPoint,this._endPosition)}_getFocusPosition(){const e=this._model,t=this.viewMode===F.Direct&&(0,m.pC)(this.dataObjectView)&&"euclidean"===this.dataObjectView.visualizedMeasurement;switch(e.state){case"drawing":return t?this._startPosition:e.endPoint?this._endPosition:this._startPosition;case"editing":return t?"start"===this._lastDraggedHandle?this._endPosition:this._startPosition:"start"===this._lastDraggedHandle?this._startPosition:this._endPosition;default:return e.cursorPoint?this._cursorPosition:null}}_getFocusSpherePosition(){return"drawing"===this._model.state||"end"===this._lastDraggedHandle?this._startPosition:this._endPosition}_updateLaserLine(){const e=this._model,t=this._getFocusPosition(),i=this.viewMode,s=this.dataObjectView,n=this._params.laserLineEnabled&&!!t&&"measured"!==e.state&&e.active;if(n&&(0,m.pC)(s)){const r="euclidean"===s.visualizedMeasurement;this._laserLine.heightManifoldTarget=r?t:null;const a=n&&!!e.startPoint&&"geodesic"===s.actualVisualizedMeasurement;this._laserLine.pointDistanceLine=a?{origin:this._getFocusSpherePosition(),target:t}:null;const o=n&&i===F.Triangle;this._laserLine.lineVerticalPlaneSegment=o?E.KD.fromPoints(this._startPosition,this._endPosition,K):null}else this._laserLine.heightManifoldTarget=null,this._laserLine.pointDistanceLine=null,this._laserLine.lineVerticalPlaneSegment=null}_initializeListeners(){this._listenerHandles=new _.Z,this._listenerHandles.add([this._model.watch("state",(e=>{(0,m.yw)(this.dataObjectView,(t=>{t.allowVisualElementsOrientationChange="measured"!==e})),this._visible&&this._updateLaserLine()}),!0),this._model.watch("measurementMode",(()=>{this._visible&&this._updateLaserLine()}),!0),this._model.watch("cursorPoint",(()=>{this._updateCursorPosition(),this._visible&&this._updateLaserLine()}),!0),this._model.model.watch("startPoint",(()=>{this._updateStartPosition(),this._visible&&this._updateLaserLine()}),!0),this._model.model.watch("endPoint",(()=>{this._updateEndPosition(),this._visible&&this._updateLaserLine()}),!0),this._model.watch("active",(()=>{this._visible&&this._updateLaserLine()}),!0)])}_destroyListeners(){this._listenerHandles.destroy(),this._listenerHandles=null}};var F,N;(0,s._)([(0,r.Cb)({readOnly:!0})],Z.prototype,"dataObjectView",void 0),Z=S=(0,s._)([(0,o.j)("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],Z),function(e){e.PickRequest=class{};e.PickResult=class{constructor(e=null,t=null,i=null){this.type=e,this.scenePoint=t,this.mapPoint=i}}}(Z||(Z={})),(N=F||(F={}))[N.Triangle=0]="Triangle",N[N.ProjectedGeodesic=1]="ProjectedGeodesic",N[N.Direct=2]="Direct",N[N.None=3]="None";const K=E.KD.create();let $=class extends f.m{constructor(e){super(e),this._handles=new _.Z,this._cachedPickRequest=new Z.PickRequest,this._cachedPickResult=new Z.PickResult,this._isAnyPointerDown=!1,this.deferCreation=!0,this.startManipulator=null,this.endManipulator=null,this.model=new x({sceneView:e.view})}initialize(){const e=new Z({model:this.model});this._set("directLineMeasurementView",e);const t=(0,v.init)(this,"state",(e=>{"ready"!==e&&this.create(),"measured"===e&&this.complete()}),!0);this._handles.add(t);const{start:i,end:s}=this.directLineMeasurementView.createManipulators(),n=(e,t,i)=>(0,L.Xd)(e,((e,s,n)=>{const r=(0,M.J4)(e);s.next(r).next((0,M.gv)(this.view)).next((e=>"start"!==e.action?e:null)).next((s=>{const n=(0,y.WG)(s.mapEnd,J);this.model[t]=n,e.location=n,this.model[i]=this._surfaceLocation(n,s.surfaceType)})),n.next(r).next((0,L.di)(this.model,[t,i])).next((()=>{e.location=(0,m.Wg)(this.model[t])}))}));this._handles.add([n(i,"startPoint","startPointSurfaceLocation"),n(s,"endPoint","endPointSurfaceLocation")]),[i,s].forEach((e=>{this._handles.add([e.events.on("grab-changed",(()=>{const e=i.grabbing||s.grabbing;e&&"measured"===this.model.state&&(this.model.state="editing"),e||(this.model.finishMeasurement(),"editing"===this.model.state&&(this.model.state="measured"))}))])})),this.manipulators.add(i),this.manipulators.add(s),this.startManipulator=i,this.endManipulator=s}destroy(){this.directLineMeasurementView.destroy(),this._set("directLineMeasurementView",null),this.model.destroy(),this._set("model",null),this._handles.destroy(),this._handles=null}get state(){var e;return null!=(e=this.model)&&e.isMeasuring?"measured"===this.model.state?"measured":"measuring":"ready"}get creating(){return"initial"===this.model.state||"drawing"===this.model.state}get isSupported(){return"3d"===this.get("view.type")}get cursor(){var e;return null==(e=this.model)||!e.active||"drawing"!==this.model.state&&"initial"!==this.model.state?null:"crosshair"}activate(){this.model.active=!0}deactivate(){this.model.active=!1}onDetach(){this.model.reset()}onShow(){this.directLineMeasurementView.show(),this._updateManipulatorVisibility()}onHide(){this.directLineMeasurementView.hide()}onInputEvent(e){switch(e.type){case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"pointer-down":this._handlePointerDown();break;case"pointer-up":this._handlePointerUp()}this._updateManipulatorVisibility()}_handlePointerMove(e){this._clearCachedPickRequest();const t=(0,P.vT)(e);"mouse"===e.pointerType&&(this._hoverAt(t),"drawing"===this.model.state&&(this.endManipulator.events.emit("drag",{action:"update",start:t,screenPoint:t}),e.stopPropagation()))}_handlePointerDown(){this._isAnyPointerDown=!0}_handlePointerUp(){this._isAnyPointerDown=!1}_handleImmediateClick(e){if(this._clearCachedPickRequest(),!function(e){return"mouse"!==e.pointerType||0===e.button}(e))return;const t=(0,P.vT)(e),i=e.pointerType;let s=!1;if(this.model.active)switch(this.model.state){case"initial":this.startManipulator.events.emit("drag",{action:"start",pointerType:i,start:t,screenPoint:t}),this.startManipulator.events.emit("drag",{action:"end",start:t,screenPoint:t}),this.model.startPoint&&(this.startManipulator.interactive=!1,this.endManipulator.interactive=!1,this.model.state="drawing",this.endManipulator.events.emit("drag",{action:"start",pointerType:i,start:t,screenPoint:t}),s=!0);break;case"drawing":this.endManipulator.events.emit("drag",{action:"update",start:t,screenPoint:t}),null!=this.model.endPoint&&(this.endManipulator.events.emit("drag",{action:"end",start:t,screenPoint:t}),this.startManipulator.interactive=!0,this.endManipulator.interactive=!0,this.model.finishMeasurement(),s=!0)}s&&e.stopPropagation(),"mouse"===e.pointerType&&this._hoverAt(t)}_hoverAt(e){const t=this._isAnyPointerDown&&"drawing"!==this.model.state&&"editing"!==this.model.state;if(this.directLineMeasurementView.requiresCursorPoint&&!t){const t=this._pick(e);t.mapPoint&&(this.model.cursorPoint=t.mapPoint)}else this.model.cursorPoint=null}_pick(e){const t=this._cachedPickRequest.screenPoint;return t&&t.x===e.x&&t.y===e.y||(this._cachedPickRequest.screenPoint=e,this._cachedPickResult=this.directLineMeasurementView.pick(this._cachedPickRequest)),this._cachedPickResult}_clearCachedPickRequest(){this._cachedPickRequest.screenPoint=null}_surfaceLocation(e,t){return 0===t?"on-the-surface":e.z>=this.directLineMeasurementView.getElevation(e)?"above-the-surface":"below-the-surface"}_updateManipulatorVisibility(){this.startManipulator.available=null!=this.model.startPoint,this.endManipulator.available=null!=this.model.endPoint}};(0,s._)([(0,r.Cb)({readOnly:!0})],$.prototype,"state",null),(0,s._)([(0,r.Cb)({readOnly:!0})],$.prototype,"creating",null),(0,s._)([(0,r.Cb)({readOnly:!0})],$.prototype,"isSupported",null),(0,s._)([(0,r.Cb)({readOnly:!0})],$.prototype,"cursor",null),(0,s._)([(0,r.Cb)({constructOnly:!0})],$.prototype,"model",void 0),(0,s._)([(0,r.Cb)({constructOnly:!0})],$.prototype,"directLineMeasurementView",void 0),(0,s._)([(0,a.B)("model.mode")],$.prototype,"mode",void 0),(0,s._)([(0,a.B)("model.unit")],$.prototype,"unit",void 0),(0,s._)([(0,a.B)("model.validMeasurement")],$.prototype,"validMeasurement",void 0),$=(0,s._)([(0,o.j)("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],$);const J=new w.Z;const X=$,Y=n.Z.getLogger("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel");let Q=class extends g.V{constructor(e){super(e),this.supportedViewType="3d",this._handles=new _.Z,this._userUnitOptions=null,this._userUnit=null}initialize(){this._handles.add([(0,v.init)(this,"unit",(e=>{this.tool&&(this.tool.model.unit=e)}))])}destroy(){this._handles.destroy(),this._handles=null}get state(){return this.isDisabled?"disabled":this.tool?this.tool.state:"ready"}get measurement(){if(!this.tool)return null;const e=this.tool.model,t=this.tool.directLineMeasurementView.dataObjectView;if((0,m.Wi)(t))return{mode:"euclidean",directDistance:{text:null,state:"unavailable"},horizontalDistance:{text:null,state:"unavailable"},verticalDistance:{text:null,state:"unavailable"}};const i=t.actualVisualizedMeasurement,s="geodesic"===i,n=(0,m.pC)(e.model.measurement),r=this.tool.directLineMeasurementView;return{mode:i,directDistance:{text:s?null:r.directLabelText,state:n&&!s?"available":"unavailable"},horizontalDistance:{text:r.horizontalLabelText,state:n?"available":"unavailable"},verticalDistance:{text:r.verticalLabelText,state:n?"available":"unavailable"}}}set unitOptions(e){this._userUnitOptions=e,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(e){this._userUnit=e?this._findSelectableUnit(e,this._userUnit):null,this.notifyChange("unit")}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}start(){return this.createTool()}clear(){this.removeTool()}createToolParams(){return{toolConstructor:X,constructorArguments:()=>({unit:this.unit})}}logUnsupportedError(){Y.error("DirectLineMeasurement3D widget is not implemented for MapView")}logError(...e){Y.error(...e)}_findSelectableUnit(e,t){const i=this.unitOptions;return-1!==i.indexOf(e)?e:t?this._findSelectableUnit(t):i[0]}_filteredOrAllUnits(e){if(!e)return d.oD.slice();const t=e.filter((e=>-1!==d.oD.indexOf(e)));return 0===t.length?d.oD.slice():t}};(0,s._)([(0,r.Cb)({readOnly:!0})],Q.prototype,"state",null),(0,s._)([(0,r.Cb)({readOnly:!0})],Q.prototype,"measurement",null),(0,s._)([(0,r.Cb)()],Q.prototype,"tool",void 0),(0,s._)([(0,r.Cb)(b.Y)],Q.prototype,"defaultUnit",void 0),(0,s._)([(0,r.Cb)()],Q.prototype,"unitOptions",null),(0,s._)([(0,r.Cb)()],Q.prototype,"unit",null),Q=(0,s._)([(0,o.j)("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel")],Q);const ee=Q,te="esri-button esri-button--secondary",ie="esri-button--disabled",se="esri-direct-line-measurement-3d",ne="esri-widget",re="esri-widget--panel",ae="esri-direct-line-measurement-3d__container",oe="esri-direct-line-measurement-3d__hint",le="esri-direct-line-measurement-3d__hint-text",de="esri-direct-line-measurement-3d__panel--error",ue="esri-direct-line-measurement-3d__measurement",ce="esri-direct-line-measurement-3d__measurement-item",he="esri-direct-line-measurement-3d__measurement-item--disabled",pe="esri-direct-line-measurement-3d__measurement-item-title",me="esri-direct-line-measurement-3d__measurement-item-value",_e="esri-direct-line-measurement-3d__settings",ve="esri-direct-line-measurement-3d__units",be="esri-direct-line-measurement-3d__units-label",ge="esri-direct-line-measurement-3d__units-select esri-select",we="esri-direct-line-measurement-3d__units-select-wrapper",Pe="esri-direct-line-measurement-3d__actions",ye="esri-direct-line-measurement-3d__clear-button",Le="esri-icon-measure-line";let fe=class extends p.default{constructor(e,t){super(e,t),this.view=null,this.visible=null,this.iconClass=Le,this.label=void 0,this.messages=null,this.messagesUnits=null,this.viewModel=new ee,this.unitOptions=null,this.unit=null}render(){const{isSupported:e,active:t,state:i,measurement:s,unit:n}=this.viewModel,r="disabled"===i,a="ready"===i,o="measuring"===i||"measured"===i,{messages:l,messagesUnits:u}=this,c=t&&a?(0,h.j)("section",{key:"esri-direct-line-measurement-3d__hint",class:oe},(0,h.j)("p",{class:le},l.hint)):null,p=e?null:(0,h.j)("section",{key:"esri-direct-line-measurement-3d__unsupported",class:de},(0,h.j)("p",null,l.unsupported)),m=(e,t,i)=>{switch(t.state){case"available":return(0,h.j)("div",{key:`${i}-enabled`,class:ce},(0,h.j)("span",{class:pe},e),(0,h.j)("span",{class:me},t.text));case"unavailable":return(0,h.j)("div",{key:`${i}-disabled`,class:this.classes(ce,he)},(0,h.j)("span",{class:pe},e))}},_=o?(0,h.j)("section",{key:"esri-direct-line-measurement-3d__measurement",class:ue},m(l.direct,s.directDistance,"direct"),m(l.horizontal,s.horizontalDistance,"horizontal"),m(l.vertical,s.verticalDistance,"vertical")):null,v=`${this.id}__units`,b=(0,h.j)("label",{class:be,for:v},l.unit),g=(0,h.j)("div",{class:we},(0,h.j)("select",{class:ge,id:v,onchange:this._changeUnit,bind:this,value:n},this.viewModel.unitOptions.map((e=>{var t;return(0,h.j)("option",{key:e,value:e},(0,d.ZO)(e)?u.systems[e]:null==(t=u.units[e])?void 0:t.pluralCapitalized)})))),w=(0,h.j)("section",{key:"esri-direct-line-measurement-3d__units",class:ve},b,g),P=o?(0,h.j)("div",{key:"settings",class:_e},w):null,y=!e||t&&!o?null:(0,h.j)("div",{class:Pe},(0,h.j)("button",{disabled:r,class:this.classes(te,ye,r&&ie),bind:this,onclick:this._newMeasurement,type:"button"},l.newMeasurement)),L=this.visible?(0,h.j)("div",{class:ae},p,c,P,_,y):null;return(0,h.j)("div",{key:"",class:this.classes(se,ne,re),role:"presentation"},L)}_newMeasurement(){(0,l.ignoreAbortErrors)(this.viewModel.start())}_changeUnit(e){const t=e.target,i=t.options[t.selectedIndex];i&&(this.unit=i.value)}};(0,s._)([(0,a.B)("viewModel.view")],fe.prototype,"view",void 0),(0,s._)([(0,a.B)("viewModel.visible")],fe.prototype,"visible",void 0),(0,s._)([(0,a.B)("viewModel.active")],fe.prototype,"active",void 0),(0,s._)([(0,r.Cb)()],fe.prototype,"iconClass",void 0),(0,s._)([(0,r.Cb)({aliasOf:{source:"messages.widgetLabel",overridable:!0}})],fe.prototype,"label",void 0),(0,s._)([(0,r.Cb)(),(0,c.H)("esri/widgets/DirectLineMeasurement3D/t9n/DirectLineMeasurement3D")],fe.prototype,"messages",void 0),(0,s._)([(0,r.Cb)(),(0,c.H)("esri/core/t9n/Units")],fe.prototype,"messagesUnits",void 0),(0,s._)([(0,r.Cb)({type:ee})],fe.prototype,"viewModel",void 0),(0,s._)([(0,a.B)("viewModel.unitOptions")],fe.prototype,"unitOptions",void 0),(0,s._)([(0,a.B)("viewModel.unit")],fe.prototype,"unit",void 0),(0,s._)([(0,u.h)()],fe.prototype,"_newMeasurement",null),(0,s._)([(0,u.h)()],fe.prototype,"_changeUnit",null),fe=(0,s._)([(0,o.j)("esri.widgets.DirectLineMeasurement3D")],fe);const Me=fe}}]);
//# sourceMappingURL=2592.js.map