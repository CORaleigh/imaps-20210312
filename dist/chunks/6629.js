(self.webpackChunkimaps=self.webpackChunkimaps||[]).push([[6629],{16629:(e,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>o});var r=a(56140),i=(a(95830),a(36544),a(68055),a(79881)),t=a(87566),l=(a(10923),a(57002),a(86035),a(32656));const n=e=>{let s=class extends e{initialize(){const{layer:e,view:s}=this;e.source.supportsSpatialReference(s.spatialReference)||this.addResolvingPromise(Promise.reject(new l.Z("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}};return(0,r._)([(0,i.Cb)()],s.prototype,"layer",void 0),s=(0,r._)([(0,t.j)("esri.views.layers.OGCFeatureLayerView")],s),s};var p=a(76244);let c=class extends(n(p.default)){};c=(0,r._)([(0,t.j)("esri.views.2d.layers.OGCFeatureLayerView2D")],c);const o=c}}]);
//# sourceMappingURL=6629.js.map