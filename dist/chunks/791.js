(self.webpackChunkimaps=self.webpackChunkimaps||[]).push([[791],{91535:(e,t,a)=>{"use strict";a.d(t,{aX:()=>v,or:()=>I});var s=a(34926),n=a(59472),r=a(36544),i=a(32656),o=a(27780),l=a(41241),u=a(53817),d=a(93833),p=a(49573),c=a(10923),h=a(56885),f=(a(36348),a(36654));async function m(e,t,a){const s="string"==typeof e?(0,c.mN)(e):e,n=t[0].spatialReference,r=(0,h.Ji)(t[0]),i={...a,query:{...s.query,f:"json",sr:n.wkid?n.wkid:JSON.stringify(n),geometries:JSON.stringify(y(t))}};return function(e,t,a){const s=(0,h.q9)(t);return e.map((e=>{const t=s.fromJSON(e);return t.spatialReference=a,t}))}((await(0,f.default)(s.path+"/simplify",i)).data,r,n)}function y(e){return{geometryType:(0,h.Ji)(e[0]),geometries:e.map((e=>e.toJSON()))}}const g=r.Z.getLogger("esri.geometry.support.normalizeUtils");function b(e){return"polygon"===e[0].type}function w(e){return"polyline"===e[0].type}function F(e,t,a){if(t){const t=function(e,t){if(!(e instanceof d.Z||e instanceof u.Z)){const e="straightLineDensify: the input geometry is neither polyline nor polygon";throw g.error(e),new i.Z(e)}const a=(0,p.x3)(e),s=[];for(const e of a){const a=[];s.push(a),a.push([e[0][0],e[0][1]]);for(let s=0;s<e.length-1;s++){const n=e[s][0],r=e[s][1],i=e[s+1][0],o=e[s+1][1],l=Math.sqrt((i-n)*(i-n)+(o-r)*(o-r)),u=(o-r)/l,d=(i-n)/l,p=l/t;if(p>1){for(let e=1;e<=p-1;e++){const s=e*t,i=d*s+n,o=u*s+r;a.push([i,o])}const e=(l+Math.floor(p-1)*t)/2,s=d*e+n,i=u*e+r;a.push([s,i])}a.push([i,o])}}return function(e){return"polygon"===e.type}(e)?new u.Z({rings:s,spatialReference:e.spatialReference}):new d.Z({paths:s,spatialReference:e.spatialReference})}(e,1e6);e=(0,l.Sx)(t,!0)}return a&&(e=(0,p.Sy)(e,a)),e}function Z(e,t,a){if(Array.isArray(e)){const s=e[0];if(s>t){const a=(0,p.XZ)(s,t);e[0]=s+a*(-2*t)}else if(s<a){const t=(0,p.XZ)(s,a);e[0]=s+t*(-2*a)}}else{const s=e.x;if(s>t){const a=(0,p.XZ)(s,t);e=e.clone().offset(a*(-2*t),0)}else if(s<a){const t=(0,p.XZ)(s,a);e=e.clone().offset(t*(-2*a),0)}}return e}function A(e,t){let a=-1;for(let s=0;s<t.cutIndexes.length;s++){const n=t.cutIndexes[s],r=t.geometries[s],i=(0,p.x3)(r);for(let e=0;e<i.length;e++){const t=i[e];t.some((a=>{if(a[0]<180)return!0;{let a=0;for(let e=0;e<t.length;e++){const s=t[e][0];a=s>a?s:a}a=Number(a.toFixed(9));const s=-360*(0,p.XZ)(a,180);for(let a=0;a<t.length;a++){const t=r.getPoint(e,a);r.setPoint(e,a,t.clone().offset(s,0))}return!0}}))}if(n===a){if(b(e))for(const t of(0,p.x3)(r))e[n]=e[n].addRing(t);else if(w(e))for(const t of(0,p.x3)(r))e[n]=e[n].addPath(t)}else a=n,e[n]=r}return e}async function v(e,t,a){if(!Array.isArray(e))return v([e],t);const r=t?t.url:s.default.geometryServiceUrl;let i,y,g,b,w,I,x,R,$=0;const S=[],E=[];for(const t of e)if((0,n.Wi)(t))E.push(t);else if(i||(i=t.spatialReference,y=(0,o.C5)(i),g=i.isWebMercator,I=g?102100:4326,b=p.UZ[I].maxX,w=p.UZ[I].minX,x=p.UZ[I].plus180Line,R=p.UZ[I].minus180Line),y)if("mesh"===t.type)E.push(t);else if("point"===t.type)E.push(Z(t.clone(),b,w));else if("multipoint"===t.type){const e=t.clone();e.points=e.points.map((e=>Z(e,b,w))),E.push(e)}else if("extent"===t.type){const e=t.clone()._normalize(!1,!1,y);E.push(e.rings?new u.Z(e):e)}else if(t.extent){const e=t.extent,a=(0,p.XZ)(e.xmin,w)*(2*b);let s=0===a?t.clone():(0,p.Sy)(t.clone(),a);e.offset(a,0),e.intersects(x)&&e.xmax!==b?($=e.xmax>$?e.xmax:$,s=F(s,g),S.push(s),E.push("cut")):e.intersects(R)&&e.xmin!==w?($=e.xmax*(2*b)>$?e.xmax*(2*b):$,s=F(s,g,360),S.push(s),E.push("cut")):E.push(s)}else E.push(t.clone());else E.push(t);let U=(0,p.XZ)($,b),X=-90;const L=U,J=new d.Z;for(;U>0;){const e=360*U-180;J.addPath([[e,X],[e,-1*X]]),X*=-1,U--}if(S.length>0&&L>0){const t=A(S,await async function(e,t,a,s){const n="string"==typeof e?(0,c.mN)(e):e,r=t[0].spatialReference,i={...s,query:{...n.query,f:"json",sr:JSON.stringify(r),target:JSON.stringify({geometryType:(0,h.Ji)(t[0]),geometries:t}),cutter:JSON.stringify(a)}},o=await(0,f.default)(n.path+"/cut",i),{cutIndexes:l,geometries:u=[]}=o.data;return{cutIndexes:l,geometries:u.map((e=>{const t=(0,h.im)(e);return t.spatialReference=r,t}))}}(r,S,J,a)),s=[],i=[];for(let a=0;a<E.length;a++){const r=E[a];if("cut"!==r)i.push(r);else{const r=t.shift(),o=e[a];(0,n.pC)(o)&&"polygon"===o.type&&o.rings&&o.rings.length>1&&r.rings.length>=o.rings.length?(s.push(r),i.push("simplify")):i.push(g?(0,l.$)(r):r)}}if(!s.length)return i;const o=await m(r,s,a),u=[];for(let e=0;e<i.length;e++){const t=i[e];"simplify"!==t?u.push(t):u.push(g?(0,l.$)(o.shift()):o.shift())}return u}const O=[];for(let e=0;e<E.length;e++){const t=E[e];if("cut"!==t)O.push(t);else{const e=S.shift();O.push(!0===g?(0,l.$)(e):e)}}return Promise.resolve(O)}function I(e,t){const a=(0,o.C5)(t);if(a){const[t,s]=a.valid,n=s-t;if(e<t)for(;e<t;)e+=n;if(e>s)for(;e>s;)e-=n}return e}},49573:(e,t,a)=>{"use strict";a.d(t,{UZ:()=>i,x3:()=>u,uS:()=>d,XZ:()=>o,Sy:()=>l});var s=a(73032),n=a(93833),r=a(56885);const i={102100:{maxX:20037508.342788905,minX:-20037508.342788905,plus180Line:new n.Z({paths:[[[20037508.342788905,-20037508.342788905],[20037508.342788905,20037508.342788905]]],spatialReference:s.Z.WebMercator}),minus180Line:new n.Z({paths:[[[-20037508.342788905,-20037508.342788905],[-20037508.342788905,20037508.342788905]]],spatialReference:s.Z.WebMercator})},4326:{maxX:180,minX:-180,plus180Line:new n.Z({paths:[[[180,-180],[180,180]]],spatialReference:s.Z.WGS84}),minus180Line:new n.Z({paths:[[[-180,-180],[-180,180]]],spatialReference:s.Z.WGS84})}};function o(e,t){return Math.ceil((e-t)/(2*t))}function l(e,t){const a=u(e);for(const e of a)for(const a of e)a[0]+=t;return e}function u(e){return(0,r.oU)(e)?e.rings:e.paths}function d(e){const t=(null==e?void 0:e.isWebMercator)?102100:4326;return[i[t].minX,i[t].maxX]}},20791:(e,t,a)=>{"use strict";a.r(t),a.d(t,{applyEdits:()=>p,isEditableLayer:()=>d});var s=a(82550),n=a(59472),r=a(32656),i=a(10923),o=a(28293),l=a(15988),u=a(91535);function d(e){var t,a;return!0===(null==e||null==(t=e.capabilities)||null==(a=t.operations)?void 0:a.supportsEditing)&&e&&(!("editingEnabled"in e)||e.editingEnabled)}async function p(e,t,a,n){let r,i;const o={edits:a,result:new Promise(((e,t)=>{r=e,i=t}))};e.emit("apply-edits",o);try{const{results:i,edits:o}=await c(e,t,a,n),l=e=>e.filter((e=>!e.error)).map(s.d9),u={edits:o,addedFeatures:l(i.addFeatureResults),updatedFeatures:l(i.updateFeatureResults),deletedFeatures:l(i.deleteFeatureResults),addedAttachments:l(i.addAttachmentResults),updatedAttachments:l(i.updateAttachmentResults),deletedAttachments:l(i.deleteAttachmentResults)};return(u.addedFeatures.length||u.updatedFeatures.length||u.deletedFeatures.length||u.addedAttachments.length||u.updatedAttachments.length||u.deletedAttachments.length)&&e.emit("edits",u),r(u),i}catch(e){throw i(e),e}}async function c(e,t,a,s){if(await e.load(),!function(e){return e&&null!=e.applyEdits}(t))return Promise.reject(new r.Z(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e}));if(!e.editingEnabled)throw new r.Z(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});const i=await function(e,t,a){const s=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),i=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments);if(!t||!s&&!i)throw new r.Z(`${e.type}-layer:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!e.capabilities.data.isVersioned&&a&&a.gdbVersion)throw new r.Z(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!e.capabilities.editing.supportsRollbackOnFailure&&a&&a.rollbackOnFailureEnabled)throw new r.Z(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");if(!e.capabilities.editing.supportsGlobalId&&a&&a.globalIdUsed)throw new r.Z(`${e.type}-layer:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!e.capabilities.editing.supportsGlobalId&&i)throw new r.Z(`${e.type}-layer:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if((!a||!a.globalIdUsed)&&i)throw new r.Z(`${e.type}-layer:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true");const l={...t};if(l.addFeatures=t&&o.Z.isCollection(t.addFeatures)?t.addFeatures.toArray():l.addFeatures||[],l.updateFeatures=t&&o.Z.isCollection(t.updateFeatures)?t.updateFeatures.toArray():l.updateFeatures||[],l.deleteFeatures=t&&o.Z.isCollection(t.deleteFeatures)?t.deleteFeatures.toArray():l.deleteFeatures||[],l.addFeatures.length&&!e.capabilities.operations.supportsAdd)throw new r.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support adding features.");if(l.updateFeatures.length&&!e.capabilities.operations.supportsUpdate)throw new r.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support updating features.");if(l.deleteFeatures.length&&!e.capabilities.operations.supportsDelete)throw new r.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support deleting features.");l.addAttachments=l.addAttachments||[],l.updateAttachments=l.updateAttachments||[],l.deleteAttachments=l.deleteAttachments||[],l.addFeatures=l.addFeatures.map(m),l.updateFeatures=l.updateFeatures.map(m);const d=a&&a.globalIdUsed;return l.addFeatures.forEach((t=>function(e,t,a){h(e,t,a)}(t,e,d))),l.updateFeatures.forEach((t=>function(e,t,a){if(h(e,t,a),"geometry"in e&&(0,n.pC)(e.geometry)&&!t.capabilities.editing.supportsGeometryUpdate)throw new r.Z(`${t.type}-layer:unsupported-operation`,"Layer does not support geometry updates.")}(t,e,d))),l.deleteFeatures.forEach((t=>function(e,t,a){h(e,t,a)}(t,e,d))),l.addAttachments.forEach((t=>f(t,e))),l.updateAttachments.forEach((t=>f(t,e))),async function(e){const t=e.addFeatures,a=e.updateFeatures,s=t.concat(a).map((e=>e.geometry)),n=await(0,u.aX)(s),r=t.length,i=a.length;return n.slice(0,r).forEach(((t,a)=>{e.addFeatures[a].geometry=t})),n.slice(r,r+i).forEach(((t,a)=>{e.updateFeatures[a].geometry=t})),e}(l)}(e,a,s);return i.addFeatures.length||i.updateFeatures.length||i.deleteFeatures.length||i.addAttachments.length||i.updateAttachments.length||i.deleteAttachments.length?{edits:i,results:await t.applyEdits(i,s)}:{edits:i,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}function h(e,t,a){if(a){if("attributes"in e&&!e.attributes[t.globalIdField])throw new r.Z(`${t.type}-layer:invalid-parameter`,"Feature should have 'globalId' when 'globalIdUsed' is true");if(!("attributes"in e)&&!e.globalId)throw new r.Z(`${t.type}-layer:invalid-parameter`,"'globalId' of the feature should be passed when 'globalIdUsed' is true")}if("geometry"in e&&(0,n.pC)(e.geometry)){if(e.geometry.hasZ&&!1===t.capabilities.data.supportsZ)throw new r.Z(`${t.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&!1===t.capabilities.data.supportsM)throw new r.Z(`${t.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function f(e,t){const{feature:a,attachment:s}=e;if(!a||"attributes"in a&&!a.attributes[t.globalIdField])throw new r.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in a)&&!a.globalId)throw new r.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!s.globalId)throw new r.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!s.data&&!s.uploadId)throw new r.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(s.data instanceof File&&s.data.name||s.name))throw new r.Z(`${t.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities.editing.supportsUploadWithItemId&&s.uploadId)throw new r.Z(`${t.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"==typeof s.data){const e=(0,i.sJ)(s.data);if(e&&!e.isBase64)throw new r.Z(`${t.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}function m(e){const t=new l.default;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}}}]);
//# sourceMappingURL=791.js.map