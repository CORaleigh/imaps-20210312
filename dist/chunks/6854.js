(self.webpackChunkimaps=self.webpackChunkimaps||[]).push([[6854],{75138:(e,r,t)=>{"use strict";t.r(r),t.d(r,{create:()=>o,projectGeometry:()=>c});var n=t(34926),i=t(32656),a=t(32797),l=t(52411);async function o(e=null,r){if(n.default.geometryServiceUrl)return new(0,(await t.e(5393).then(t.bind(t,88201))).default)({url:n.default.geometryServiceUrl});if(!e)throw new i.Z("internal:geometry-service-url-not-configured");let l;if(l="portal"in e?e.portal||a.Z.getDefault():e,await l.load({signal:r}),l.helperServices&&l.helperServices.geometry&&l.helperServices.geometry.url)return new(0,(await t.e(5393).then(t.bind(t,88201))).default)({url:l.helperServices.geometry.url});throw new i.Z("internal:geometry-service-url-not-configured")}async function c(e,r,t=null,n){const a=await o(t,n),c=new l.Z;c.geometries=[e],c.outSpatialReference=r;const u=await a.project(c,{signal:n});if(u&&Array.isArray(u)&&1===u.length)return u[0];throw new i.Z("internal:geometry-service-projection-failed")}}}]);
//# sourceMappingURL=6854.js.map