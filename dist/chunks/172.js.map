{"version":3,"sources":["webpack://imaps/./node_modules/@arcgis/core/layers/support/RasterWorker.js"],"names":["e","r","data","options","toJSON","s","pixelBlock","extent","o","this","symbolizer","symbolize","Promise","resolve","symbolizerJSON","histograms","rendererJSON","type","simpleStretch","srcPixelBlock","stretchParams","tileSize","maximumPyramidLevel","forEach","set","srcPixelBlocks","map","srcMosaicSize","coefs","t","destDimension","sampleSpacing","interpolation"],"mappings":"gMAIu5C,QAAnkC,MAAQ,aAAaA,GAAG,MAAMC,QAAQ,OAAED,EAAEE,KAAKF,EAAEG,SAAS,OAAOF,GAAGA,EAAEG,SAAS,UAAUC,GAAGA,EAAEC,WAAW,aAAWD,EAAEC,YAAYD,EAAEE,OAAOF,EAAEE,OAAO,aAAWF,EAAEE,QAAQ,KAAK,MAAMC,EAAEC,KAAKC,WAAWC,UAAUN,GAAG,OAAOO,QAAQC,QAAQL,GAAGA,EAAEJ,UAAU,uBAAuBJ,GAAG,IAAIC,EAAEQ,KAAKC,WAAW,aAAWV,EAAEc,gBAAgBd,EAAEe,YAAY,mBAAmB,OAAOd,EAAEQ,KAAKC,iBAAY,EAAOT,EAAEe,aAAaC,QAAQR,KAAKC,WAAWM,aAAaD,WAAWf,EAAEe,YAAY,QAAQf,GAAG,MAAMK,EAAEI,KAAKC,WAAWQ,cAAc,aAAWlB,EAAEmB,eAAenB,EAAEoB,eAAe,OAAOR,QAAQC,QAAQR,GAAGA,EAAED,UAAU,6BAA6BJ,GAAG,MAAMK,GAAE,QAAE,aAAWL,EAAEmB,gBAAgB,OAAOP,QAAQC,QAAQR,GAAG,MAAML,GAAG,MAAMK,GAAE,QAAE,aAAWL,EAAEmB,eAAenB,EAAEqB,SAASrB,EAAEsB,qBAAqB,OAAOjB,GAAGA,EAAEkB,SAAQ,CAAEvB,EAAEC,KAAKI,EAAEmB,IAAIvB,EAAE,MAAMD,OAAE,EAAOA,EAAEI,aAAaQ,QAAQC,QAAQR,GAAG,yBAAyBL,GAAG,MAAMK,EAAEL,EAAEyB,eAAeC,KAAK1B,GAAGA,EAAE,IAAI,IAAEA,GAAG,OAAOQ,GAAE,QAAEH,EAAEL,EAAE2B,eAAe,IAAI3B,EAAE4B,MAAM,OAAOpB,GAAGA,EAAEJ,SAAS,MAAMyB,GAAE,QAAErB,EAAER,EAAE8B,cAAc9B,EAAE4B,MAAM5B,EAAE+B,cAAc/B,EAAEgC,eAAe,OAAOH,GAAGA,EAAEzB","file":"chunks/172.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport e from\"../../geometry/Extent.js\";import\"../../geometry.js\";import r from\"./PixelBlock.js\";import{decode as s}from\"./rasterFormats/RasterCodec.js\";import{estimateStatisticsHistograms as o,split as t,mosaic as i,approximateTransform as m}from\"./rasterFunctions/pixelUtils.js\";import l from\"../../renderers/support/RasterSymbolizer.js\";class n{async decode(e){const r=await s(e.data,e.options);return r&&r.toJSON()}symbolize(s){s.pixelBlock=r.fromJSON(s.pixelBlock),s.extent=s.extent?e.fromJSON(s.extent):null;const o=this.symbolizer.symbolize(s);return Promise.resolve(o&&o.toJSON())}async updateSymbolizer(e){var r;this.symbolizer=l.fromJSON(e.symbolizerJSON),e.histograms&&\"rasterStretch\"===(null==(r=this.symbolizer)?void 0:r.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=e.histograms)}stretch(e){const s=this.symbolizer.simpleStretch(r.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(s&&s.toJSON())}estimateStatisticsHistograms(e){const s=o(r.fromJSON(e.srcPixelBlock));return Promise.resolve(s)}split(e){const s=t(r.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel);return s&&s.forEach(((e,r)=>{s.set(r,null==e?void 0:e.toJSON())})),Promise.resolve(s)}async mosaicAndTransform(e){const s=e.srcPixelBlocks.map((e=>e?new r(e):null)),o=i(s,e.srcMosaicSize);if(!e.coefs)return o&&o.toJSON();const t=m(o,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation);return t&&t.toJSON()}}export default n;\n"],"sourceRoot":""}